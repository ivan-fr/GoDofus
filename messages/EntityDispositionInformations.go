// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-09-11 11:59:54.5177977 +0200 CEST m=+20.726105301

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type EntityDispositionInformations struct {
	PacketId  uint32
	cellId    int32
	direction byte
}

var EntityDispositionInformationsMap = make(map[uint]*EntityDispositionInformations)

func (En *EntityDispositionInformations) GetNOA(instance uint) Message {
	EntityDispositionInformations_, ok := EntityDispositionInformationsMap[instance]

	if ok {
		return EntityDispositionInformations_
	}

	EntityDispositionInformationsMap[instance] = &EntityDispositionInformations{PacketId: EntityDispositionInformationsID}
	return EntityDispositionInformationsMap[instance]
}

func (En *EntityDispositionInformations) Serialize(buff *bytes.Buffer) {
	utils.WriteVarInt16(buff, En.cellId)
	_ = binary.Write(buff, binary.BigEndian, En.direction)
}

func (En *EntityDispositionInformations) Deserialize(reader *bytes.Reader) {
	En.cellId = utils.ReadVarInt16(reader)
	_ = binary.Read(reader, binary.BigEndian, &En.direction)
}

func (En *EntityDispositionInformations) GetPacketId() uint32 {
	return En.PacketId
}

func (En *EntityDispositionInformations) String() string {
	return fmt.Sprintf("packetId: %d\n", En.PacketId)
}
