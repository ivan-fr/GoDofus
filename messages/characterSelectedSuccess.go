// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 09:16:30.8055349 +0200 CEST m=+0.021702201

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type characterSelectedSuccess struct {
	PacketId          uint32
	cBI               *characterBaseInformations
	isCollectingStats bool
}

var characterSelectedSuccessMap = make(map[uint]*characterSelectedSuccess)

func GetCharacterSelectedSuccessNOA(instance uint) *characterSelectedSuccess {
	characterSelectedSuccess_, ok := characterSelectedSuccessMap[instance]

	if ok {
		return characterSelectedSuccess_
	}

	characterSelectedSuccessMap[instance] = &characterSelectedSuccess{PacketId: CharacterSelectedSuccessID}
	return characterSelectedSuccessMap[instance]
}

func (c *characterSelectedSuccess) Serialize(buff *bytes.Buffer) {
	c.cBI.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, c.isCollectingStats)
}

func (c *characterSelectedSuccess) Deserialize(reader *bytes.Reader) {
	c.cBI = new(characterBaseInformations)
	c.cBI.Deserialize(reader)
	_ = binary.Read(reader, binary.BigEndian, &c.isCollectingStats)
}

func (c *characterSelectedSuccess) GetPacketId() uint32 {
	return c.PacketId
}

func (c *characterSelectedSuccess) String() string {
	return fmt.Sprintf("packetId: %d\n", c.PacketId)
}
