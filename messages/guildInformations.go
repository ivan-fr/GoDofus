// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 15:33:37.5304574 +0200 CEST m=+39.248545201

package messages

import (
	"bytes"
	"fmt"
)

type guildInformations struct {
	PacketId               uint32
	basicGuildInformations *basicGuildInformations
	guildEmblem            *guildEmblem
}

var guildInformationsMap = make(map[uint]*guildInformations)

func (gu *guildInformations) GetNOA(instance uint) Message {
	guildInformations_, ok := guildInformationsMap[instance]

	if ok {
		return guildInformations_
	}

	guildInformationsMap[instance] = &guildInformations{PacketId: GuildInformationsID}
	return guildInformationsMap[instance]
}

func (gu *guildInformations) Serialize(buff *bytes.Buffer) {
	gu.basicGuildInformations.Serialize(buff)
	gu.guildEmblem.Serialize(buff)
}

func (gu *guildInformations) Deserialize(reader *bytes.Reader) {
	gu.basicGuildInformations = new(basicGuildInformations)
	gu.basicGuildInformations.Deserialize(reader)
	gu.guildEmblem = new(guildEmblem)
	gu.guildEmblem.Deserialize(reader)
}

func (gu *guildInformations) GetPacketId() uint32 {
	return gu.PacketId
}

func (gu *guildInformations) String() string {
	return fmt.Sprintf("packetId: %d\n", gu.PacketId)
}
