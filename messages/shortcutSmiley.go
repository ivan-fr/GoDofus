// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 10:36:19.1175088 +0200 CEST m=+0.020465301

package messages

import (
	"GoDofus/utils"
	"bytes"
	"fmt"
)

type shortcutSmiley struct {
	PacketId uint32
	sO       *shortcut
	smileyId int32
}

var shortcutSmileyMap = make(map[uint]*shortcutSmiley)

func (s *shortcutSmiley) GetNOA(instance uint) Message {
	shortcutSmiley_, ok := shortcutSmileyMap[instance]

	if ok {
		return shortcutSmiley_
	}

	shortcutSmileyMap[instance] = &shortcutSmiley{PacketId: ShortcutSmileyID}
	return shortcutSmileyMap[instance]
}

func (s *shortcutSmiley) Serialize(buff *bytes.Buffer) {
	s.sO.Serialize(buff)
	utils.WriteVarInt16(buff, s.smileyId)
}

func (s *shortcutSmiley) Deserialize(reader *bytes.Reader) {
	s.sO = new(shortcut)
	s.sO.Deserialize(reader)
	s.smileyId = utils.ReadVarInt16(reader)
}

func (s *shortcutSmiley) GetPacketId() uint32 {
	return s.PacketId
}

func (s *shortcutSmiley) String() string {
	return fmt.Sprintf("packetId: %d\n", s.PacketId)
}
