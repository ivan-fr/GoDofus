// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-25 10:22:38.7155254 +0200 CEST m=+0.003141801

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type selectedServerData struct {
	PacketId              uint32
	serverId              uint32
	address               []byte
	portsLen              uint16
	ports                 []int32
	canCreateNewCharacter bool
	ticket                []byte
}

var selectedServerData_ = &selectedServerData{PacketId: SelectedServerDataID}

func GetSelectedServerDataNOA() *selectedServerData {
	return selectedServerData_
}

func (s *selectedServerData) Serialize(buff *bytes.Buffer) {

}

func (s *selectedServerData) Deserialize(reader *bytes.Reader) {
	s.serverId = uint32(utils.ReadVarInt16(reader))
	s.address = utils.ReadUTF(reader)
	_ = binary.Read(reader, binary.BigEndian, &s.portsLen)

	for i := uint16(0); i < s.portsLen; i++ {
		s.ports = append(s.ports, utils.ReadVarInt16(reader))
	}
	_ = binary.Read(reader, binary.BigEndian, &s.canCreateNewCharacter)

	lenght := utils.ReadVarInt32(reader)

	for i := int32(0); i < lenght; i++ {
		var b byte
		_ = binary.Read(reader, binary.BigEndian, &b)
		s.ticket = append(s.ticket, b)
	}
}

func (s *selectedServerData) GetPacketId() uint32 {
	return s.PacketId
}

func (s *selectedServerData) String() string {
	return fmt.Sprintf("PacketId: %d\nAddress: %s\n", s.PacketId, string(s.address))
}
