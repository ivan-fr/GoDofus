// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 22:03:51.2565451 +0200 CEST m=+1.494433601

package messages

import (
	"bytes"
	"fmt"
)

type spouseGetInformations struct {
	PacketId uint32
}

var spouseGetInformationsMap = make(map[uint]*spouseGetInformations)

func (sp *spouseGetInformations) GetNOA(instance uint) Message {
	spouseGetInformations_, ok := spouseGetInformationsMap[instance]

	if ok {
		return spouseGetInformations_
	}

	spouseGetInformationsMap[instance] = &spouseGetInformations{PacketId: SpouseGetInformationsID}
	return spouseGetInformationsMap[instance]
}

func (sp *spouseGetInformations) Serialize(buff *bytes.Buffer) {
}

func (sp *spouseGetInformations) Deserialize(reader *bytes.Reader) {
}

func (sp *spouseGetInformations) GetPacketId() uint32 {
	return sp.PacketId
}

func (sp *spouseGetInformations) String() string {
	return fmt.Sprintf("packetId: %d\n", sp.PacketId)
}
