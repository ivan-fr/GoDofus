// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 09:02:49.6615616 +0200 CEST m=+0.020621001

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type havenBagRoomPreviewInformation struct {
	PacketId uint32
	roomId   byte
	themeId  byte
}

var havenBagRoomPreviewInformationMap = make(map[uint]*havenBagRoomPreviewInformation)

func GetHavenBagRoomPreviewInformationNOA(instance uint) *havenBagRoomPreviewInformation {
	havenBagRoomPreviewInformation_, ok := havenBagRoomPreviewInformationMap[instance]

	if ok {
		return havenBagRoomPreviewInformation_
	}

	havenBagRoomPreviewInformationMap[instance] = &havenBagRoomPreviewInformation{PacketId: HavenBagRoomPreviewInformationID}
	return havenBagRoomPreviewInformationMap[instance]
}

func (h *havenBagRoomPreviewInformation) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, h.roomId)
	_ = binary.Write(buff, binary.BigEndian, h.themeId)
}

func (h *havenBagRoomPreviewInformation) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &h.roomId)
	_ = binary.Read(reader, binary.BigEndian, &h.themeId)
}

func (h *havenBagRoomPreviewInformation) GetPacketId() uint32 {
	return h.PacketId
}

func (h *havenBagRoomPreviewInformation) String() string {
	return fmt.Sprintf("packetId: %d\n", h.PacketId)
}
