// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-25 09:52:40.4777026 +0200 CEST m=+0.003050901

package messages

import (
	"bytes"
	"fmt"
)

type credentialsAcknowledgement struct {
	PacketId uint32
}

var credentialsAcknowledgementMap = make(map[uint]*credentialsAcknowledgement)

func (c *credentialsAcknowledgement) GetNOA(instance uint) Message {
	credentialsAcknowledgement_, ok := credentialsAcknowledgementMap[instance]

	if ok {
		return credentialsAcknowledgement_
	}

	credentialsAcknowledgementMap[instance] = &credentialsAcknowledgement{PacketId: CredentialsAcknowledgementID}
	return credentialsAcknowledgementMap[instance]
}

func (c *credentialsAcknowledgement) Serialize(buff *bytes.Buffer) {

}

func (c *credentialsAcknowledgement) Deserialize(reader *bytes.Reader) {

}

func (c *credentialsAcknowledgement) GetPacketId() uint32 {
	return c.PacketId
}

func (c *credentialsAcknowledgement) String() string {
	return fmt.Sprintf("PacketId: %d\n", c.PacketId)
}
