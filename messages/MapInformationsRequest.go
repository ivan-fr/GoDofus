// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-31 18:41:10.2220214 +0200 CEST m=+12.918585401

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type MapInformationsRequest struct {
	PacketId uint32
	MapId    float64
}

var mapInformationsRequestMap = make(map[uint]*MapInformationsRequest)

func (ma *MapInformationsRequest) GetNOA(instance uint) Message {
	mapInformationsRequest_, ok := mapInformationsRequestMap[instance]

	if ok {
		return mapInformationsRequest_
	}

	mapInformationsRequestMap[instance] = &MapInformationsRequest{PacketId: MapInformationsRequestID}
	return mapInformationsRequestMap[instance]
}

func (ma *MapInformationsRequest) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, ma.MapId)
}

func (ma *MapInformationsRequest) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &ma.MapId)
}

func (ma *MapInformationsRequest) GetPacketId() uint32 {
	return ma.PacketId
}

func (ma *MapInformationsRequest) String() string {
	return fmt.Sprintf("packetId: %d\n", ma.PacketId)
}
