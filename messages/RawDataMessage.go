// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-31 19:41:59.1669859 +0200 CEST m=+19.940887801

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type RawDataMessage struct {
	PacketId uint32
	Content  []byte
}

var rawDataMessageMap = make(map[uint]*RawDataMessage)

func (ra *RawDataMessage) GetNOA(instance uint) Message {
	rawDataMessage_, ok := rawDataMessageMap[instance]

	if ok {
		return rawDataMessage_
	}

	rawDataMessageMap[instance] = &RawDataMessage{PacketId: RawDataMessageID}
	return rawDataMessageMap[instance]
}

func (ra *RawDataMessage) Serialize(buff *bytes.Buffer) {
	utils.WriteVarInt32(buff, int32(len(ra.Content)))
	_ = binary.Write(buff, binary.BigEndian, ra.Content)
}

func (ra *RawDataMessage) Deserialize(reader *bytes.Reader) {
	var len0_ = utils.ReadVarInt32(reader)
	ra.Content = make([]byte, len0_)
	_ = binary.Read(reader, binary.BigEndian, ra.Content)
}

func (ra *RawDataMessage) GetPacketId() uint32 {
	return ra.PacketId
}

func (ra *RawDataMessage) String() string {
	return fmt.Sprintf("packetId: %d\n", ra.PacketId)
}
