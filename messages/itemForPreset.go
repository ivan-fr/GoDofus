// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 22:25:25.5191653 +0200 CEST m=+39.700784101

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type itemForPreset struct {
	PacketId uint32
	postion  uint16
	objGid   int32
	objUid   int32
}

var itemForPresetMap = make(map[uint]*itemForPreset)

func (it *itemForPreset) GetNOA(instance uint) Message {
	itemForPreset_, ok := itemForPresetMap[instance]

	if ok {
		return itemForPreset_
	}

	itemForPresetMap[instance] = &itemForPreset{PacketId: ItemForPresetID}
	return itemForPresetMap[instance]
}

func (it *itemForPreset) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, it.postion)
	utils.WriteVarInt16(buff, it.objGid)
	utils.WriteVarInt32(buff, it.objUid)
}

func (it *itemForPreset) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &it.postion)
	it.objGid = utils.ReadVarInt16(reader)
	it.objUid = utils.ReadVarInt32(reader)
}

func (it *itemForPreset) GetPacketId() uint32 {
	return it.PacketId
}

func (it *itemForPreset) String() string {
	return fmt.Sprintf("packetId: %d\n", it.PacketId)
}
