// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-09-11 12:37:17.5547237 +0200 CEST m=+21.162802401

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type FightTeamInformations struct {
	PacketId                       uint32
	typeId                         uint16
	AbstractFightTeamInformations0 *AbstractFightTeamInformations
	FightTeamMemberInformations1   []*FightTeamMemberInformations
}

var FightTeamInformationsMap = make(map[uint]*FightTeamInformations)

func (Fi *FightTeamInformations) GetNOA(instance uint) Message {
	FightTeamInformations_, ok := FightTeamInformationsMap[instance]

	if ok {
		return FightTeamInformations_
	}

	FightTeamInformationsMap[instance] = &FightTeamInformations{PacketId: FightTeamInformationsID}
	return FightTeamInformationsMap[instance]
}

func (Fi *FightTeamInformations) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, Fi.typeId)
	Fi.AbstractFightTeamInformations0.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, uint16(len(Fi.FightTeamMemberInformations1)))
	for i := 0; i < len(Fi.FightTeamMemberInformations1); i++ {
		Fi.FightTeamMemberInformations1[i].Serialize(buff)
	}
}

func (Fi *FightTeamInformations) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &Fi.typeId)
	Fi.AbstractFightTeamInformations0 = new(AbstractFightTeamInformations)
	Fi.AbstractFightTeamInformations0.Deserialize(reader)
	var len1_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len1_)
	Fi.FightTeamMemberInformations1 = nil
	for i := 0; i < int(len1_); i++ {
		aMessage1 := new(FightTeamMemberInformations)
		aMessage1.Deserialize(reader)
		Fi.FightTeamMemberInformations1 = append(Fi.FightTeamMemberInformations1, aMessage1)
	}
}

func (Fi *FightTeamInformations) GetPacketId() uint32 {
	return Fi.PacketId
}

func (Fi *FightTeamInformations) String() string {
	return fmt.Sprintf("packetId: %d\n", Fi.PacketId)
}
