// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 09:20:35.8179051 +0200 CEST m=+65.845188501

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type guildEmblem struct {
	PacketId        uint32
	symbolName      int32
	symbolColor     int32
	backgroundShape byte
	backgroundColor int32
}

var guildEmblemMap = make(map[uint]*guildEmblem)

func GetGuildEmblemNOA(instance uint) *guildEmblem {
	guildEmblem_, ok := guildEmblemMap[instance]

	if ok {
		return guildEmblem_
	}

	guildEmblemMap[instance] = &guildEmblem{PacketId: GuildEmblemID}
	return guildEmblemMap[instance]
}

func (gu *guildEmblem) Serialize(buff *bytes.Buffer) {
	utils.WriteVarInt16(buff, gu.symbolName)
	_ = binary.Write(buff, binary.BigEndian, gu.symbolColor)
	_ = binary.Write(buff, binary.BigEndian, gu.backgroundShape)
	_ = binary.Write(buff, binary.BigEndian, gu.backgroundColor)
}

func (gu *guildEmblem) Deserialize(reader *bytes.Reader) {
	gu.symbolName = utils.ReadVarInt16(reader)
	_ = binary.Read(reader, binary.BigEndian, &gu.symbolColor)
	_ = binary.Read(reader, binary.BigEndian, &gu.backgroundShape)
	_ = binary.Read(reader, binary.BigEndian, &gu.backgroundColor)
}

func (gu *guildEmblem) GetPacketId() uint32 {
	return gu.PacketId
}

func (gu *guildEmblem) String() string {
	return fmt.Sprintf("packetId: %d\n", gu.PacketId)
}
