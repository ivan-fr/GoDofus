// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 09:44:49.9761152 +0200 CEST m=+10.733935401

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type warnOnPermaDeathState struct {
	PacketId uint32
	enable   bool
}

var warnOnPermaDeathStateMap = make(map[uint]*warnOnPermaDeathState)

func (wa *warnOnPermaDeathState) GetNOA(instance uint) Message {
	warnOnPermaDeathState_, ok := warnOnPermaDeathStateMap[instance]

	if ok {
		return warnOnPermaDeathState_
	}

	warnOnPermaDeathStateMap[instance] = &warnOnPermaDeathState{PacketId: WarnOnPermaDeathStateID}
	return warnOnPermaDeathStateMap[instance]
}

func (wa *warnOnPermaDeathState) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, wa.enable)
}

func (wa *warnOnPermaDeathState) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &wa.enable)
}

func (wa *warnOnPermaDeathState) GetPacketId() uint32 {
	return wa.PacketId
}

func (wa *warnOnPermaDeathState) String() string {
	return fmt.Sprintf("packetId: %d\n", wa.PacketId)
}
