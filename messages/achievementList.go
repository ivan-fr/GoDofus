// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 14:42:23.7263748 +0200 CEST m=+5.805371401

package messages

import (
	"bytes"
	"fmt"
)

type achievementList struct {
	PacketId    uint32
	itemWrapper *itemWrapper
}

var achievementListMap = make(map[uint]*achievementList)

func (ac *achievementList) GetNOA(instance uint) Message {
	achievementList_, ok := achievementListMap[instance]

	if ok {
		return achievementList_
	}

	achievementListMap[instance] = &achievementList{PacketId: AchievementListID}
	return achievementListMap[instance]
}

func (ac *achievementList) Serialize(buff *bytes.Buffer) {
	ac.itemWrapper.Serialize(buff)
}

func (ac *achievementList) Deserialize(reader *bytes.Reader) {
	ac.itemWrapper = new(itemWrapper)
	ac.itemWrapper.Deserialize(reader)
}

func (ac *achievementList) GetPacketId() uint32 {
	return ac.PacketId
}

func (ac *achievementList) String() string {
	return fmt.Sprintf("packetId: %d\n", ac.PacketId)
}
