// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 15:52:32.0963117 +0200 CEST m=+128.373901801

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type arenaRankInfos struct {
	PacketId                uint32
	var0                    byte
	arenaRanking            *arenaRanking
	var2                    byte
	arenaLeagueRanking      *arenaLeagueRanking
	victoryCount            int32
	fightcount              int32
	numFightNeededForLadder int16
}

var arenaRankInfosMap = make(map[uint]*arenaRankInfos)

func (ar *arenaRankInfos) GetNOA(instance uint) Message {
	arenaRankInfos_, ok := arenaRankInfosMap[instance]

	if ok {
		return arenaRankInfos_
	}

	arenaRankInfosMap[instance] = &arenaRankInfos{PacketId: ArenaRankInfosID}
	return arenaRankInfosMap[instance]
}

func (ar *arenaRankInfos) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, ar.var0)
	if ar.var0 != 0 {
		ar.arenaRanking.Serialize(buff)
	}
	_ = binary.Write(buff, binary.BigEndian, ar.var2)
	if ar.var2 != 0 {
		ar.arenaLeagueRanking.Serialize(buff)
	}

	utils.WriteVarInt16(buff, ar.victoryCount)
	utils.WriteVarInt16(buff, ar.fightcount)
	_ = binary.Write(buff, binary.BigEndian, ar.numFightNeededForLadder)
}

func (ar *arenaRankInfos) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &ar.var0)
	if ar.var0 != 0 {
		ar.arenaRanking = new(arenaRanking)
		ar.arenaRanking.Deserialize(reader)
	}

	_ = binary.Read(reader, binary.BigEndian, &ar.var2)
	if ar.var2 != 0 {
		ar.arenaLeagueRanking = new(arenaLeagueRanking)
		ar.arenaLeagueRanking.Deserialize(reader)
	}

	ar.victoryCount = utils.ReadVarInt16(reader)
	ar.fightcount = utils.ReadVarInt16(reader)
	_ = binary.Read(reader, binary.BigEndian, &ar.numFightNeededForLadder)
}

func (ar *arenaRankInfos) GetPacketId() uint32 {
	return ar.PacketId
}

func (ar *arenaRankInfos) String() string {
	return fmt.Sprintf("packetId: %d\n", ar.PacketId)
}
