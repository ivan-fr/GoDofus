// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 14:45:07.8654982 +0200 CEST m=+45.175660701

package messages

import (
	"GoDofus/utils"
	"bytes"
	"fmt"
)

type achievementAchieved struct {
	PacketId   uint32
	id         int32
	achievedBy float64
}

var achievementAchievedMap = make(map[uint]*achievementAchieved)

func (ac *achievementAchieved) GetNOA(instance uint) Message {
	achievementAchieved_, ok := achievementAchievedMap[instance]

	if ok {
		return achievementAchieved_
	}

	achievementAchievedMap[instance] = &achievementAchieved{PacketId: AchievementAchievedID}
	return achievementAchievedMap[instance]
}

func (ac *achievementAchieved) Serialize(buff *bytes.Buffer) {
	utils.WriteVarInt16(buff, ac.id)
	utils.WriteVarInt64(buff, ac.achievedBy)
}

func (ac *achievementAchieved) Deserialize(reader *bytes.Reader) {
	ac.id = utils.ReadVarInt16(reader)
	ac.achievedBy = float64(utils.ReadVarInt64(reader))
}

func (ac *achievementAchieved) GetPacketId() uint32 {
	return ac.PacketId
}

func (ac *achievementAchieved) String() string {
	return fmt.Sprintf("packetId: %d\n", ac.PacketId)
}
