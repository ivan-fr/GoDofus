// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 10:31:23.8535827 +0200 CEST m=+0.020397101

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type shortcutObjectItem struct {
	PacketId uint32
	sO       *shortcutObject
	itemUID  int32
	itemGID  int32
}

var shortcutObjectItemMap = make(map[uint]*shortcutObjectItem)

func GetShortcutObjectItemNOA(instance uint) *shortcutObjectItem {
	shortcutObjectItem_, ok := shortcutObjectItemMap[instance]

	if ok {
		return shortcutObjectItem_
	}

	shortcutObjectItemMap[instance] = &shortcutObjectItem{PacketId: ShortcutObjectItemID}
	return shortcutObjectItemMap[instance]
}

func (s *shortcutObjectItem) Serialize(buff *bytes.Buffer) {
	s.sO.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, s.itemUID)
	_ = binary.Write(buff, binary.BigEndian, s.itemGID)
}

func (s *shortcutObjectItem) Deserialize(reader *bytes.Reader) {
	s.sO = new(shortcutObject)
	s.sO.Deserialize(reader)
	_ = binary.Read(reader, binary.BigEndian, &s.itemUID)
	_ = binary.Read(reader, binary.BigEndian, &s.itemGID)
}

func (s *shortcutObjectItem) GetPacketId() uint32 {
	return s.PacketId
}

func (s *shortcutObjectItem) String() string {
	return fmt.Sprintf("packetId: %d\n", s.PacketId)
}
