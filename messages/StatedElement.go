// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-09-11 12:28:58.4351007 +0200 CEST m=+42.117423101

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type StatedElement struct {
	PacketId      uint32
	elementId     int32
	elementCellId int32
	elementState  int32
	onCurrentMap  bool
}

var StatedElementMap = make(map[uint]*StatedElement)

func (St *StatedElement) GetNOA(instance uint) Message {
	StatedElement_, ok := StatedElementMap[instance]

	if ok {
		return StatedElement_
	}

	StatedElementMap[instance] = &StatedElement{PacketId: StatedElementID}
	return StatedElementMap[instance]
}

func (St *StatedElement) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, St.elementId)
	utils.WriteVarInt16(buff, St.elementCellId)
	utils.WriteVarInt32(buff, St.elementState)
	_ = binary.Write(buff, binary.BigEndian, St.onCurrentMap)
}

func (St *StatedElement) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &St.elementId)
	St.elementCellId = utils.ReadVarInt16(reader)
	St.elementState = utils.ReadVarInt32(reader)
	_ = binary.Read(reader, binary.BigEndian, &St.onCurrentMap)
}

func (St *StatedElement) GetPacketId() uint32 {
	return St.PacketId
}

func (St *StatedElement) String() string {
	return fmt.Sprintf("packetId: %d\n", St.PacketId)
}
