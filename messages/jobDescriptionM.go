// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 22:36:21.2949087 +0200 CEST m=+22.637023801

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type jobDescriptionM struct {
	PacketId       uint32
	jobDescription []*jobDescription
}

var jobDescriptionMMap = make(map[uint]*jobDescriptionM)

func (jo *jobDescriptionM) GetNOA(instance uint) Message {
	jobDescriptionM_, ok := jobDescriptionMMap[instance]

	if ok {
		return jobDescriptionM_
	}

	jobDescriptionMMap[instance] = &jobDescriptionM{PacketId: JobDescriptionMID}
	return jobDescriptionMMap[instance]
}

func (jo *jobDescriptionM) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, uint16(len(jo.jobDescription)))
	for i := 0; i < len(jo.jobDescription); i++ {
		jo.jobDescription[i].Serialize(buff)
	}
}

func (jo *jobDescriptionM) Deserialize(reader *bytes.Reader) {
	var len0_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len0_)
	jo.jobDescription = nil
	for i := 0; i < int(len0_); i++ {
		aMessage0 := new(jobDescription)
		aMessage0.Deserialize(reader)
		jo.jobDescription = append(jo.jobDescription, aMessage0)
	}
}

func (jo *jobDescriptionM) GetPacketId() uint32 {
	return jo.PacketId
}

func (jo *jobDescriptionM) String() string {
	return fmt.Sprintf("packetId: %d\n", jo.PacketId)
}
