// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 08:54:16.7814545 +0200 CEST m=+0.019912801

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type serverExperienceModificator struct {
	PacketId          uint32
	experiencePercent int32
}

var serverExperienceModificatorMap = make(map[uint]*serverExperienceModificator)

func (s *serverExperienceModificator) GetNOA(instance uint) Message {
	serverExperienceModificator_, ok := serverExperienceModificatorMap[instance]

	if ok {
		return serverExperienceModificator_
	}

	serverExperienceModificatorMap[instance] = &serverExperienceModificator{PacketId: ServerExperienceModificatorID}
	return serverExperienceModificatorMap[instance]
}

func (s *serverExperienceModificator) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, s.experiencePercent)
}

func (s *serverExperienceModificator) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &s.experiencePercent)
}

func (s *serverExperienceModificator) GetPacketId() uint32 {
	return s.PacketId
}

func (s *serverExperienceModificator) String() string {
	return fmt.Sprintf("packetId: %d\n", s.PacketId)
}
