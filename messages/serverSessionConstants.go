// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-28 17:18:06.8556877 +0200 CEST m=+0.020040301

package messages

import (
	"bytes"
	"fmt"
)

type serverSessionConstants struct {
	PacketId uint32
	iW       *itemWrapper
}

var serverSessionConstantsMap = make(map[uint]*serverSessionConstants)

func (s *serverSessionConstants) GetNOA(instance uint) Message {
	serverSessionConstants_, ok := serverSessionConstantsMap[instance]

	if ok {
		return serverSessionConstants_
	}

	serverSessionConstantsMap[instance] = &serverSessionConstants{PacketId: ServerSessionConstantsID}
	return serverSessionConstantsMap[instance]
}

func (s *serverSessionConstants) Serialize(buff *bytes.Buffer) {
	s.iW.Serialize(buff)
}

func (s *serverSessionConstants) Deserialize(reader *bytes.Reader) {
	s.iW = new(itemWrapper)
	s.iW.Deserialize(reader)
}

func (s *serverSessionConstants) GetPacketId() uint32 {
	return s.PacketId
}

func (s *serverSessionConstants) String() string {
	return fmt.Sprintf("packetId: %d\n", s.PacketId)
}
