// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-31 17:35:23.8819441 +0200 CEST m=+31.244586201

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type ChangeMap struct {
	PacketId  uint32
	MapId     float64
	autopilot bool
}

var changeMapMap = make(map[uint]*ChangeMap)

func (ch *ChangeMap) GetNOA(instance uint) Message {
	changeMap_, ok := changeMapMap[instance]

	if ok {
		return changeMap_
	}

	changeMapMap[instance] = &ChangeMap{PacketId: ChangeMapID}
	return changeMapMap[instance]
}

func (ch *ChangeMap) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, ch.MapId)
	_ = binary.Write(buff, binary.BigEndian, ch.autopilot)
}

func (ch *ChangeMap) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &ch.MapId)
	_ = binary.Read(reader, binary.BigEndian, &ch.autopilot)
}

func (ch *ChangeMap) GetPacketId() uint32 {
	return ch.PacketId
}

func (ch *ChangeMap) String() string {
	return fmt.Sprintf("packetId: %d\n", ch.PacketId)
}
