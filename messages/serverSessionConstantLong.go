// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-28 19:10:53.0699549 +0200 CEST m=+0.019838901

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type serverSessionConstantLong struct {
	PacketId uint32
	ssC      *serverSessionConstant
	value    float64
}

var serverSessionConstantLongMap = make(map[uint]*serverSessionConstantLong)

func (s *serverSessionConstantLong) GetNOA(instance uint) Message {
	serverSessionConstantLong_, ok := serverSessionConstantLongMap[instance]

	if ok {
		return serverSessionConstantLong_
	}

	serverSessionConstantLongMap[instance] = &serverSessionConstantLong{PacketId: ServerSessionConstantLongID}
	return serverSessionConstantLongMap[instance]
}

func (s *serverSessionConstantLong) Serialize(buff *bytes.Buffer) {
	s.ssC.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, s.value)
}

func (s *serverSessionConstantLong) Deserialize(reader *bytes.Reader) {
	s.ssC = new(serverSessionConstant)
	s.ssC.Deserialize(reader)
	_ = binary.Read(reader, binary.BigEndian, &s.value)
}

func (s *serverSessionConstantLong) GetPacketId() uint32 {
	return s.PacketId
}

func (s *serverSessionConstantLong) String() string {
	return fmt.Sprintf("packetId: %d\n", s.PacketId)
}
