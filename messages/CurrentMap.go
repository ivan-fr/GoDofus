// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-31 17:06:48.6554648 +0200 CEST m=+25.460517501

package messages

import (
	"GoDofus/parsers"
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type CurrentMap struct {
	PacketId uint32
	MapId    float64
	mapKey   []byte
	myMap    *parsers.Map_
}

var currentMapMap = make(map[uint]*CurrentMap)

func (cu *CurrentMap) GetNOA(instance uint) Message {
	currentMap_, ok := currentMapMap[instance]

	if ok {
		return currentMap_
	}

	currentMapMap[instance] = &CurrentMap{PacketId: CurrentMapID}
	return currentMapMap[instance]
}

func (cu *CurrentMap) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, cu.MapId)
	utils.WriteUTF(buff, cu.mapKey)
}

func (cu *CurrentMap) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &cu.MapId)
	cu.mapKey = utils.ReadUTF(reader)
	cu.myMap = parsers.LoadMap(uint64(cu.MapId))
}

func (cu *CurrentMap) GetPacketId() uint32 {
	return cu.PacketId
}

func (cu *CurrentMap) String() string {
	return fmt.Sprintf("packetId: %d\n", cu.PacketId)
}
