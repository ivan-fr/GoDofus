// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 15:32:04.2172708 +0200 CEST m=+67.260989501

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type basicGuildInformations struct {
	PacketId   uint32
	guildId    int32
	guildName  []byte
	guildLevel byte
}

var basicGuildInformationsMap = make(map[uint]*basicGuildInformations)

func GetBasicGuildInformationsNOA(instance uint) *basicGuildInformations {
	basicGuildInformations_, ok := basicGuildInformationsMap[instance]

	if ok {
		return basicGuildInformations_
	}

	basicGuildInformationsMap[instance] = &basicGuildInformations{PacketId: BasicGuildInformationsID}
	return basicGuildInformationsMap[instance]
}

func (ba *basicGuildInformations) Serialize(buff *bytes.Buffer) {
	utils.WriteVarInt32(buff, ba.guildId)
	utils.WriteUTF(buff, ba.guildName)
	_ = binary.Write(buff, binary.BigEndian, ba.guildLevel)
}

func (ba *basicGuildInformations) Deserialize(reader *bytes.Reader) {
	ba.guildId = utils.ReadVarInt32(reader)
	ba.guildName = utils.ReadUTF(reader)
	_ = binary.Read(reader, binary.BigEndian, &ba.guildLevel)
}

func (ba *basicGuildInformations) GetPacketId() uint32 {
	return ba.PacketId
}

func (ba *basicGuildInformations) String() string {
	return fmt.Sprintf("packetId: %d\n", ba.PacketId)
}
