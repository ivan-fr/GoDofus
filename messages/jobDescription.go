// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 22:33:50.6781203 +0200 CEST m=+36.740830701

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type jobDescription struct {
	PacketId    uint32
	jobId       byte
	itemWrapper *itemWrapper
}

var jobDescriptionMap = make(map[uint]*jobDescription)

func GetJobDescriptionNOA(instance uint) *jobDescription {
	jobDescription_, ok := jobDescriptionMap[instance]

	if ok {
		return jobDescription_
	}

	jobDescriptionMap[instance] = &jobDescription{PacketId: JobDescriptionID}
	return jobDescriptionMap[instance]
}

func (jo *jobDescription) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, jo.jobId)
	jo.itemWrapper.Serialize(buff)
}

func (jo *jobDescription) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &jo.jobId)
	jo.itemWrapper = new(itemWrapper)
	jo.itemWrapper.Deserialize(reader)
}

func (jo *jobDescription) GetPacketId() uint32 {
	return jo.PacketId
}

func (jo *jobDescription) String() string {
	return fmt.Sprintf("packetId: %d\n", jo.PacketId)
}
