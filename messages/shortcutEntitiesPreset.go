// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 10:40:00.3487074 +0200 CEST m=+0.020179901

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type shortcutEntitiesPreset struct {
	PacketId uint32
	sO       *shortcut
	presetId uint16
}

var shortcutEntitiesPresetMap = make(map[uint]*shortcutEntitiesPreset)

func (s *shortcutEntitiesPreset) GetNOA(instance uint) Message {
	shortcutEntitiesPreset_, ok := shortcutEntitiesPresetMap[instance]

	if ok {
		return shortcutEntitiesPreset_
	}

	shortcutEntitiesPresetMap[instance] = &shortcutEntitiesPreset{PacketId: ShortcutEntitiesPresetID}
	return shortcutEntitiesPresetMap[instance]
}

func (s *shortcutEntitiesPreset) Serialize(buff *bytes.Buffer) {
	s.sO.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, s.presetId)
}

func (s *shortcutEntitiesPreset) Deserialize(reader *bytes.Reader) {
	s.sO = new(shortcut)
	s.sO.Deserialize(reader)
	_ = binary.Read(reader, binary.BigEndian, &s.presetId)
}

func (s *shortcutEntitiesPreset) GetPacketId() uint32 {
	return s.PacketId
}

func (s *shortcutEntitiesPreset) String() string {
	return fmt.Sprintf("packetId: %d\n", s.PacketId)
}
