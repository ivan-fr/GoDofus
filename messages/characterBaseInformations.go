// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-28 20:31:58.2233491 +0200 CEST m=+0.020466401

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type characterBaseInformations struct {
	PacketId uint32
	cMPI     *characterMinimalPlusLookInformations
	sex      bool
}

var characterBaseInformationsMap = make(map[uint]*characterBaseInformations)

func GetCharacterBaseInformationsNOA(instance uint) *characterBaseInformations {
	characterBaseInformations_, ok := characterBaseInformationsMap[instance]

	if ok {
		return characterBaseInformations_
	}

	characterBaseInformationsMap[instance] = &characterBaseInformations{PacketId: CharacterBaseInformationsID}
	return characterBaseInformationsMap[instance]
}

func (c *characterBaseInformations) Serialize(buff *bytes.Buffer) {
	c.cMPI.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, c.sex)
}

func (c *characterBaseInformations) Deserialize(reader *bytes.Reader) {
	c.cMPI = new(characterMinimalPlusLookInformations)
	c.cMPI.Deserialize(reader)
	_ = binary.Read(reader, binary.BigEndian, &c.sex)
}

func (c *characterBaseInformations) GetPacketId() uint32 {
	return c.PacketId
}

func (c *characterBaseInformations) String() string {
	return fmt.Sprintf("packetId: %d\n", c.PacketId)
}
