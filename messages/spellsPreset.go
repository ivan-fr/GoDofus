// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 22:02:06.6095256 +0200 CEST m=+27.736577101

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type spellsPreset struct {
	PacketId uint32
	preset   *preset
	sFPs     []*spellForPreset
}

var spellsPresetMap = make(map[uint]*spellsPreset)

func GetSpellsPresetNOA(instance uint) *spellsPreset {
	spellsPreset_, ok := spellsPresetMap[instance]

	if ok {
		return spellsPreset_
	}

	spellsPresetMap[instance] = &spellsPreset{PacketId: SpellsPresetID}
	return spellsPresetMap[instance]
}

func (sp *spellsPreset) Serialize(buff *bytes.Buffer) {
	sp.preset.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, uint16(len(sp.sFPs)))
	for i := 0; i < len(sp.sFPs); i++ {
		sp.sFPs[i].Serialize(buff)
	}
}

func (sp *spellsPreset) Deserialize(reader *bytes.Reader) {
	sp.preset = new(preset)
	sp.preset.Deserialize(reader)
	var len1_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len1_)
	sp.sFPs = nil
	for i := 0; i < int(len1_); i++ {
		aMessage1 := new(spellForPreset)
		aMessage1.Deserialize(reader)
		sp.sFPs = append(sp.sFPs, aMessage1)
	}
}

func (sp *spellsPreset) GetPacketId() uint32 {
	return sp.PacketId
}

func (sp *spellsPreset) String() string {
	return fmt.Sprintf("packetId: %d\n", sp.PacketId)
}
