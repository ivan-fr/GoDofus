// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-09-11 12:12:26.5724491 +0200 CEST m=+73.754056701

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type EntityLook struct {
	PacketId      uint32
	bonesId       int32
	skins         []int32
	indexedColors []int32
	scales        []int32
	SubEntity4    []*SubEntity
}

var EntityLookMap = make(map[uint]*EntityLook)

func (En *EntityLook) GetNOA(instance uint) Message {
	EntityLook_, ok := EntityLookMap[instance]

	if ok {
		return EntityLook_
	}

	EntityLookMap[instance] = &EntityLook{PacketId: EntityLookID}
	return EntityLookMap[instance]
}

func (En *EntityLook) Serialize(buff *bytes.Buffer) {
	utils.WriteVarInt16(buff, En.bonesId)
	_ = binary.Write(buff, binary.BigEndian, uint16(len(En.skins)))
	for i := 0; i < len(En.skins); i++ {
		utils.WriteVarInt16(buff, En.skins[i])
	}
	_ = binary.Write(buff, binary.BigEndian, uint16(len(En.indexedColors)))
	_ = binary.Write(buff, binary.BigEndian, En.indexedColors)
	_ = binary.Write(buff, binary.BigEndian, uint16(len(En.scales)))
	for i := 0; i < len(En.scales); i++ {
		utils.WriteVarInt16(buff, En.scales[i])
	}
	_ = binary.Write(buff, binary.BigEndian, uint16(len(En.SubEntity4)))
	for i := 0; i < len(En.SubEntity4); i++ {
		En.SubEntity4[i].Serialize(buff)
	}
}

func (En *EntityLook) Deserialize(reader *bytes.Reader) {
	En.bonesId = utils.ReadVarInt16(reader)
	var len1_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len1_)
	En.skins = nil
	for i := 0; i < int(len1_); i++ {
		En.skins = append(En.skins, utils.ReadVarInt16(reader))
	}
	var len2_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len2_)
	En.indexedColors = make([]int32, len2_)
	_ = binary.Read(reader, binary.BigEndian, En.indexedColors)
	var len3_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len3_)
	En.scales = nil
	for i := 0; i < int(len3_); i++ {
		En.scales = append(En.scales, utils.ReadVarInt16(reader))
	}
	var len4_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len4_)
	En.SubEntity4 = nil
	for i := 0; i < int(len4_); i++ {
		aMessage4 := new(SubEntity)
		aMessage4.Deserialize(reader)
		En.SubEntity4 = append(En.SubEntity4, aMessage4)
	}
}

func (En *EntityLook) GetPacketId() uint32 {
	return En.PacketId
}

func (En *EntityLook) String() string {
	return fmt.Sprintf("packetId: %d\n", En.PacketId)
}
