// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-28 17:19:34.1828513 +0200 CEST m=+0.019451501

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type trustStatus struct {
	PacketId  uint32
	trusted   bool
	certified bool
}

var trustStatusMap = make(map[uint]*trustStatus)

func (t *trustStatus) GetNOA(instance uint) Message {
	trustStatus_, ok := trustStatusMap[instance]

	if ok {
		return trustStatus_
	}

	trustStatusMap[instance] = &trustStatus{PacketId: TrustStatusID}
	return trustStatusMap[instance]
}

func (t *trustStatus) Serialize(buff *bytes.Buffer) {
	var box uint32
	box = utils.SetFlag(box, 0, t.trusted)
	box = utils.SetFlag(box, 1, t.certified)

	_ = binary.Write(buff, binary.BigEndian, byte(box))
}

func (t *trustStatus) Deserialize(reader *bytes.Reader) {
	var box byte
	_ = binary.Read(reader, binary.BigEndian, &box)

	t.trusted = utils.GetFlag(uint32(box), 0)
	t.certified = utils.GetFlag(uint32(box), 1)
}

func (t *trustStatus) GetPacketId() uint32 {
	return t.PacketId
}

func (t *trustStatus) String() string {
	return fmt.Sprintf("packetId: %d\n", t.PacketId)
}
