// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 22:51:21.0601214 +0200 CEST m=+23.873229201

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type abstractContactInformations struct {
	PacketId               uint32
	accountId              int32
	accountTagInformation1 *accountTagInformation
}

var abstractContactInformationsMap = make(map[uint]*abstractContactInformations)

func (ab *abstractContactInformations) GetNOA(instance uint) Message {
	abstractContactInformations_, ok := abstractContactInformationsMap[instance]

	if ok {
		return abstractContactInformations_
	}

	abstractContactInformationsMap[instance] = &abstractContactInformations{PacketId: AbstractContactInformationsID}
	return abstractContactInformationsMap[instance]
}

func (ab *abstractContactInformations) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, ab.accountId)
	ab.accountTagInformation1.Serialize(buff)
}

func (ab *abstractContactInformations) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &ab.accountId)
	ab.accountTagInformation1 = new(accountTagInformation)
	ab.accountTagInformation1.Deserialize(reader)
}

func (ab *abstractContactInformations) GetPacketId() uint32 {
	return ab.PacketId
}

func (ab *abstractContactInformations) String() string {
	return fmt.Sprintf("packetId: %d\n", ab.PacketId)
}
