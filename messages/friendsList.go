// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 22:49:02.8995223 +0200 CEST m=+18.645513801

package messages

import (
	"bytes"
	"fmt"
)

type friendsList struct {
	PacketId     uint32
	itemWrapper0 *itemWrapper
}

var friendsListMap = make(map[uint]*friendsList)

func (fr *friendsList) GetNOA(instance uint) Message {
	friendsList_, ok := friendsListMap[instance]

	if ok {
		return friendsList_
	}

	friendsListMap[instance] = &friendsList{PacketId: FriendsListID}
	return friendsListMap[instance]
}

func (fr *friendsList) Serialize(buff *bytes.Buffer) {
	fr.itemWrapper0.Serialize(buff)
}

func (fr *friendsList) Deserialize(reader *bytes.Reader) {
	fr.itemWrapper0 = new(itemWrapper)
	fr.itemWrapper0.Deserialize(reader)
}

func (fr *friendsList) GetPacketId() uint32 {
	return fr.PacketId
}

func (fr *friendsList) String() string {
	return fmt.Sprintf("packetId: %d\n", fr.PacketId)
}
