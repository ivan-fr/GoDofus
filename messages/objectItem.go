// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 11:12:15.50591 +0200 CEST m=+0.020180201

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type objectItem struct {
	PacketId  uint32
	position  int16
	objectGID int32
	iW        *itemWrapper
	objectUID int32
	quantity  int32
}

var objectItemMap = make(map[uint]*objectItem)

func GetObjectItemNOA(instance uint) *objectItem {
	objectItem_, ok := objectItemMap[instance]

	if ok {
		return objectItem_
	}

	objectItemMap[instance] = &objectItem{PacketId: ObjectItemID}
	return objectItemMap[instance]
}

func (o *objectItem) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, o.position)
	utils.WriteVarInt16(buff, o.objectGID)
	o.iW.Serialize(buff)
	utils.WriteVarInt32(buff, o.objectUID)
	utils.WriteVarInt32(buff, o.quantity)
}

func (o *objectItem) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &o.position)
	o.objectGID = utils.ReadVarInt16(reader)
	o.iW = new(itemWrapper)
	o.iW.Deserialize(reader)
	o.objectUID = utils.ReadVarInt32(reader)
	o.quantity = utils.ReadVarInt32(reader)
}

func (o *objectItem) GetPacketId() uint32 {
	return o.PacketId
}

func (o *objectItem) String() string {
	return fmt.Sprintf("packetId: %d\n", o.PacketId)
}
