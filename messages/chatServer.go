// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 22:10:37.7835409 +0200 CEST m=+57.960216601

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type chatServer struct {
	PacketId           uint32
	chatAbstractServer *chatAbstractServer
	senderId           float64
	senderName         []byte
	prefix             []byte
	senderAccountId    int32
}

var chatServerMap = make(map[uint]*chatServer)

func (ch *chatServer) GetNOA(instance uint) Message {
	chatServer_, ok := chatServerMap[instance]

	if ok {
		return chatServer_
	}

	chatServerMap[instance] = &chatServer{PacketId: ChatServerID}
	return chatServerMap[instance]
}

func (ch *chatServer) Serialize(buff *bytes.Buffer) {
	ch.chatAbstractServer.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, ch.senderId)
	utils.WriteUTF(buff, ch.senderName)
	utils.WriteUTF(buff, ch.prefix)
	_ = binary.Write(buff, binary.BigEndian, ch.senderAccountId)
}

func (ch *chatServer) Deserialize(reader *bytes.Reader) {
	ch.chatAbstractServer = new(chatAbstractServer)
	ch.chatAbstractServer.Deserialize(reader)
	_ = binary.Read(reader, binary.BigEndian, &ch.senderId)
	ch.senderName = utils.ReadUTF(reader)
	ch.prefix = utils.ReadUTF(reader)
	_ = binary.Read(reader, binary.BigEndian, &ch.senderAccountId)
}

func (ch *chatServer) GetPacketId() uint32 {
	return ch.PacketId
}

func (ch *chatServer) String() string {
	return fmt.Sprintf("packetId: %d\n", ch.PacketId)
}
