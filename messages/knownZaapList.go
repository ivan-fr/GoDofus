// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 09:36:19.2650089 +0200 CEST m=+79.637819601

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type knownZaapList struct {
	PacketId     uint32
	destinations []float64
}

var knownZaapListMap = make(map[uint]*knownZaapList)

func (kn *knownZaapList) GetNOA(instance uint) Message {
	knownZaapList_, ok := knownZaapListMap[instance]

	if ok {
		return knownZaapList_
	}

	knownZaapListMap[instance] = &knownZaapList{PacketId: KnownZaapListID}
	return knownZaapListMap[instance]
}

func (kn *knownZaapList) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, uint16(len(kn.destinations)))
	_ = binary.Write(buff, binary.BigEndian, kn.destinations)
}

func (kn *knownZaapList) Deserialize(reader *bytes.Reader) {
	var len0_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len0_)
	kn.destinations = make([]float64, len0_)
	_ = binary.Read(reader, binary.BigEndian, kn.destinations)
}

func (kn *knownZaapList) GetPacketId() uint32 {
	return kn.PacketId
}

func (kn *knownZaapList) String() string {
	return fmt.Sprintf("packetId: %d\n", kn.PacketId)
}
