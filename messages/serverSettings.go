// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-28 17:15:37.6239637 +0200 CEST m=+0.019915901

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type serverSettings struct {
	PacketId          uint32
	isMonoAccount     bool
	hasFreeAutopilot  bool
	lang              []byte
	community         byte
	gameType          byte
	arenaLeaveBanTime int32
	itemMaxLevel      int32
}

var serverSettingsMap = make(map[uint]*serverSettings)

func (s *serverSettings) GetNOA(instance uint) Message {
	serverSettings_, ok := serverSettingsMap[instance]

	if ok {
		return serverSettings_
	}

	serverSettingsMap[instance] = &serverSettings{PacketId: ServerSettingsID}
	return serverSettingsMap[instance]
}

func (s *serverSettings) Serialize(buff *bytes.Buffer) {
	var box uint32
	box = utils.SetFlag(box, 0, s.isMonoAccount)
	box = utils.SetFlag(box, 1, s.hasFreeAutopilot)

	_ = binary.Write(buff, binary.BigEndian, byte(box))
	utils.WriteUTF(buff, s.lang)
	_ = binary.Write(buff, binary.BigEndian, s.community)
	_ = binary.Write(buff, binary.BigEndian, s.gameType)
	utils.WriteVarInt16(buff, s.arenaLeaveBanTime)
	_ = binary.Write(buff, binary.BigEndian, s.itemMaxLevel)
}

func (s *serverSettings) Deserialize(reader *bytes.Reader) {
	var box byte
	_ = binary.Read(reader, binary.BigEndian, &box)

	s.isMonoAccount = utils.GetFlag(uint32(box), 0)
	s.hasFreeAutopilot = utils.GetFlag(uint32(box), 1)

	utils.ReadUTF(reader)
	_ = binary.Read(reader, binary.BigEndian, &s.community)
	_ = binary.Read(reader, binary.BigEndian, &s.gameType)
	s.arenaLeaveBanTime = utils.ReadVarInt16(reader)
	_ = binary.Read(reader, binary.BigEndian, &s.itemMaxLevel)
}

func (s *serverSettings) GetPacketId() uint32 {
	return s.PacketId
}

func (s *serverSettings) String() string {
	return fmt.Sprintf("packetId: %d\n", s.PacketId)
}
