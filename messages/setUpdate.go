// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 12:37:44.6349503 +0200 CEST m=+0.020627801

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type setUpdate struct {
	PacketId   uint32
	setId      int32
	setObjects []int32
	iW         *itemWrapper
}

var setUpdateMap = make(map[uint]*setUpdate)

func (s *setUpdate) GetNOA(instance uint) Message {
	setUpdate_, ok := setUpdateMap[instance]

	if ok {
		return setUpdate_
	}

	setUpdateMap[instance] = &setUpdate{PacketId: SetUpdateID}
	return setUpdateMap[instance]
}

func (s *setUpdate) Serialize(buff *bytes.Buffer) {
	utils.WriteVarInt16(buff, s.setId)
	_ = binary.Write(buff, binary.BigEndian, uint16(len(s.setObjects)))
	for i := 0; i < len(s.setObjects); i++ {
		utils.WriteVarInt16(buff, s.setObjects[i])
	}
	s.iW.Serialize(buff)
}

func (s *setUpdate) Deserialize(reader *bytes.Reader) {
	s.setId = utils.ReadVarInt16(reader)
	var len_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len_)
	s.setObjects = nil
	for i := 0; i < int(len_); i++ {
		s.setObjects = append(s.setObjects, utils.ReadVarInt16(reader))
	}
	s.iW = new(itemWrapper)
	s.iW.Deserialize(reader)
}

func (s *setUpdate) GetPacketId() uint32 {
	return s.PacketId
}

func (s *setUpdate) String() string {
	return fmt.Sprintf("packetId: %d\n", s.PacketId)
}
