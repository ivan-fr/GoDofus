// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 23:16:29.8661896 +0200 CEST m=+13.581973501

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type lifePointsRegenBegin struct {
	PacketId  uint32
	regenRate byte
}

var lifePointsRegenBeginMap = make(map[uint]*lifePointsRegenBegin)

func (li *lifePointsRegenBegin) GetNOA(instance uint) Message {
	lifePointsRegenBegin_, ok := lifePointsRegenBeginMap[instance]

	if ok {
		return lifePointsRegenBegin_
	}

	lifePointsRegenBeginMap[instance] = &lifePointsRegenBegin{PacketId: LifePointsRegenBeginID}
	return lifePointsRegenBeginMap[instance]
}

func (li *lifePointsRegenBegin) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, li.regenRate)
}

func (li *lifePointsRegenBegin) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &li.regenRate)
}

func (li *lifePointsRegenBegin) GetPacketId() uint32 {
	return li.PacketId
}

func (li *lifePointsRegenBegin) String() string {
	return fmt.Sprintf("packetId: %d\n", li.PacketId)
}
