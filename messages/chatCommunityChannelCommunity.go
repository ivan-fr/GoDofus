// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 09:34:12.0008104 +0200 CEST m=+32.636625601

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type chatCommunityChannelCommunity struct {
	PacketId    uint32
	communityId uint16
}

var chatCommunityChannelCommunityMap = make(map[uint]*chatCommunityChannelCommunity)

func GetChatCommunityChannelCommunityNOA(instance uint) *chatCommunityChannelCommunity {
	chatCommunityChannelCommunity_, ok := chatCommunityChannelCommunityMap[instance]

	if ok {
		return chatCommunityChannelCommunity_
	}

	chatCommunityChannelCommunityMap[instance] = &chatCommunityChannelCommunity{PacketId: ChatCommunityChannelCommunityID}
	return chatCommunityChannelCommunityMap[instance]
}

func (ch *chatCommunityChannelCommunity) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, ch.communityId)
}

func (ch *chatCommunityChannelCommunity) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &ch.communityId)
}

func (ch *chatCommunityChannelCommunity) GetPacketId() uint32 {
	return ch.PacketId
}

func (ch *chatCommunityChannelCommunity) String() string {
	return fmt.Sprintf("packetId: %d\n", ch.PacketId)
}
