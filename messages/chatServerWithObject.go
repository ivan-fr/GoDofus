// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 22:21:05.4064243 +0200 CEST m=+32.800688601

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type chatServerWithObject struct {
	PacketId    uint32
	chatServer0 *chatServer
	objectItem1 []*objectItem
}

var chatServerWithObjectMap = make(map[uint]*chatServerWithObject)

func (ch *chatServerWithObject) GetNOA(instance uint) Message {
	chatServerWithObject_, ok := chatServerWithObjectMap[instance]

	if ok {
		return chatServerWithObject_
	}

	chatServerWithObjectMap[instance] = &chatServerWithObject{PacketId: ChatServerWithObjectID}
	return chatServerWithObjectMap[instance]
}

func (ch *chatServerWithObject) Serialize(buff *bytes.Buffer) {
	ch.chatServer0.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, uint16(len(ch.objectItem1)))
	for i := 0; i < len(ch.objectItem1); i++ {
		ch.objectItem1[i].Serialize(buff)
	}
}

func (ch *chatServerWithObject) Deserialize(reader *bytes.Reader) {
	ch.chatServer0 = new(chatServer)
	ch.chatServer0.Deserialize(reader)
	var len1_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len1_)
	ch.objectItem1 = nil
	for i := 0; i < int(len1_); i++ {
		aMessage1 := new(objectItem)
		aMessage1.Deserialize(reader)
		ch.objectItem1 = append(ch.objectItem1, aMessage1)
	}
}

func (ch *chatServerWithObject) GetPacketId() uint32 {
	return ch.PacketId
}

func (ch *chatServerWithObject) String() string {
	return fmt.Sprintf("packetId: %d\n", ch.PacketId)
}
