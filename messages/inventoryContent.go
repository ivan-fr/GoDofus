// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 11:06:46.8909639 +0200 CEST m=+0.020233201

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type inventoryContent struct {
	PacketId uint32
	oIs      []*objectItem
	kamas    float64
}

var inventoryContentMap = make(map[uint]*inventoryContent)

func GetInventoryContentNOA(instance uint) *inventoryContent {
	inventoryContent_, ok := inventoryContentMap[instance]

	if ok {
		return inventoryContent_
	}

	inventoryContentMap[instance] = &inventoryContent{PacketId: InventoryContentID}
	return inventoryContentMap[instance]
}

func (iC *inventoryContent) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, uint16(len(iC.oIs)))

	for i := 0; i < len(iC.oIs); i++ {
		iC.oIs[i].Serialize(buff)
	}
	utils.WriteVarInt64(buff, iC.kamas)
}

func (iC *inventoryContent) Deserialize(reader *bytes.Reader) {
	var len_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len_)
	iC.oIs = nil
	for i := 0; i < int(len_); i++ {
		aOI := new(objectItem)
		aOI.Deserialize(reader)
		iC.oIs = append(iC.oIs, aOI)
	}
	iC.kamas = float64(utils.ReadVarUInt64(reader))
}

func (iC *inventoryContent) GetPacketId() uint32 {
	return iC.PacketId
}

func (iC *inventoryContent) String() string {
	return fmt.Sprintf("packetId: %d\n", iC.PacketId)
}
