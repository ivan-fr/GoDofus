// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 15:04:21.8284914 +0200 CEST m=+93.452542101

package messages

import (
	"GoDofus/utils"
	"bytes"
	"fmt"
)

type characterExperienceGain struct {
	PacketId              uint32
	experienceCharacter   float64
	experienceMount       float64
	experienceGuild       float64
	experienceIncarnation float64
}

var characterExperienceGainMap = make(map[uint]*characterExperienceGain)

func (ch *characterExperienceGain) GetNOA(instance uint) Message {
	characterExperienceGain_, ok := characterExperienceGainMap[instance]

	if ok {
		return characterExperienceGain_
	}

	characterExperienceGainMap[instance] = &characterExperienceGain{PacketId: CharacterExperienceGainID}
	return characterExperienceGainMap[instance]
}

func (ch *characterExperienceGain) Serialize(buff *bytes.Buffer) {
	utils.WriteVarUInt64(buff, ch.experienceCharacter)
	utils.WriteVarUInt64(buff, ch.experienceMount)
	utils.WriteVarUInt64(buff, ch.experienceGuild)
	utils.WriteVarUInt64(buff, ch.experienceIncarnation)
}

func (ch *characterExperienceGain) Deserialize(reader *bytes.Reader) {
	ch.experienceCharacter = float64(utils.ReadVarUInt64(reader))
	ch.experienceMount = float64(utils.ReadVarUInt64(reader))
	ch.experienceGuild = float64(utils.ReadVarUInt64(reader))
	ch.experienceIncarnation = float64(utils.ReadVarUInt64(reader))
}

func (ch *characterExperienceGain) GetPacketId() uint32 {
	return ch.PacketId
}

func (ch *characterExperienceGain) String() string {
	return fmt.Sprintf("packetId: %d\n", ch.PacketId)
}
