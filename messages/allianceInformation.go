// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 09:21:36.4179282 +0200 CEST m=+30.063399301

package messages

import (
	"bytes"
	"fmt"
)

type allianceInformation struct {
	PacketId                      uint32
	basicNamedAllianceInformation *basicNamedAllianceInformation
	guildEmblem                   *guildEmblem
}

var allianceInformationMap = make(map[uint]*allianceInformation)

func GetAllianceInformationNOA(instance uint) *allianceInformation {
	allianceInformation_, ok := allianceInformationMap[instance]

	if ok {
		return allianceInformation_
	}

	allianceInformationMap[instance] = &allianceInformation{PacketId: AllianceInformationID}
	return allianceInformationMap[instance]
}

func (al *allianceInformation) Serialize(buff *bytes.Buffer) {
	al.basicNamedAllianceInformation.Serialize(buff)
	al.guildEmblem.Serialize(buff)
}

func (al *allianceInformation) Deserialize(reader *bytes.Reader) {
	al.basicNamedAllianceInformation = new(basicNamedAllianceInformation)
	al.basicNamedAllianceInformation.Deserialize(reader)
	al.guildEmblem = new(guildEmblem)
	al.guildEmblem.Deserialize(reader)
}

func (al *allianceInformation) GetPacketId() uint32 {
	return al.PacketId
}

func (al *allianceInformation) String() string {
	return fmt.Sprintf("packetId: %d\n", al.PacketId)
}
