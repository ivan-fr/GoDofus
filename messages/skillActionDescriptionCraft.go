// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 22:53:50.101315 +0200 CEST m=+72.608449201

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type skillActionDescriptionCraft struct {
	PacketId               uint32
	skillActionDescription *skillActionDescription
	probability            byte
}

var skillActionDescriptionCraftMap = make(map[uint]*skillActionDescriptionCraft)

func (sk *skillActionDescriptionCraft) GetNOA(instance uint) Message {
	skillActionDescriptionCraft_, ok := skillActionDescriptionCraftMap[instance]

	if ok {
		return skillActionDescriptionCraft_
	}

	skillActionDescriptionCraftMap[instance] = &skillActionDescriptionCraft{PacketId: SkillActionDescriptionCraftID}
	return skillActionDescriptionCraftMap[instance]
}

func (sk *skillActionDescriptionCraft) Serialize(buff *bytes.Buffer) {
	sk.skillActionDescription.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, sk.probability)
}

func (sk *skillActionDescriptionCraft) Deserialize(reader *bytes.Reader) {
	sk.skillActionDescription = new(skillActionDescription)
	sk.skillActionDescription.Deserialize(reader)
	_ = binary.Read(reader, binary.BigEndian, &sk.probability)
}

func (sk *skillActionDescriptionCraft) GetPacketId() uint32 {
	return sk.PacketId
}

func (sk *skillActionDescriptionCraft) String() string {
	return fmt.Sprintf("packetId: %d\n", sk.PacketId)
}
