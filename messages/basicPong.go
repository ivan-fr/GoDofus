// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-27 15:47:36.2785575 +0200 CEST m=+0.020101901

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type basicPong struct {
	PacketId uint32
	quiet    bool
}

var basicPongMap = make(map[uint]*basicPong)

func GetBasicPongNOA(instance uint) *basicPong {
	basicPongè_, ok := basicPongMap[instance]

	if ok {
		return basicPongè_
	}

	basicPongMap[instance] = &basicPong{PacketId: BasicPongID}
	return basicPongè_
}

func (b *basicPong) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, true)
}

func (b *basicPong) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &b.quiet)
}

func (b *basicPong) GetPacketId() uint32 {
	return b.PacketId
}

func (b *basicPong) String() string {
	return fmt.Sprintf("packetId: %d\n", b.PacketId)
}
