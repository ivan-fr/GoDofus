// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-25 13:37:29.6275734 +0200 CEST m=+0.003123301

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type rawData struct {
	PacketId uint32
	content  []byte
	instance uint
}

var rawDataMap = make(map[uint]*rawData)

func (r *rawData) GetNOA(instance uint) Message {
	rawData_, ok := rawDataMap[instance]

	if ok {
		return rawData_
	}

	rawDataMap[instance] = &rawData{PacketId: RawDataID, instance: instance}
	return rawDataMap[instance]
}

func (r *rawData) Serialize(buff *bytes.Buffer) {
	utils.WriteVarInt32(buff, int32(len(r.content)))
	_ = binary.Write(buff, binary.BigEndian, r.content)
}

func (r *rawData) Deserialize(reader *bytes.Reader) {
	contentLen := utils.ReadVarInt32(reader)
	r.content = make([]byte, contentLen)
	_ = binary.Read(reader, binary.BigEndian, r.content)
}

func (r *rawData) GetPacketId() uint32 {
	return r.PacketId
}

func (r *rawData) String() string {
	return fmt.Sprintf("packetId: %d\n", r.PacketId)
}
