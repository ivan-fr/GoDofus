// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 09:42:51.7841606 +0200 CEST m=+7.988382601

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type friendWarnOnLevelGainState struct {
	PacketId uint32
	enable   bool
}

var friendWarnOnLevelGainStateMap = make(map[uint]*friendWarnOnLevelGainState)

func GetFriendWarnOnLevelGainStateNOA(instance uint) *friendWarnOnLevelGainState {
	friendWarnOnLevelGainState_, ok := friendWarnOnLevelGainStateMap[instance]

	if ok {
		return friendWarnOnLevelGainState_
	}

	friendWarnOnLevelGainStateMap[instance] = &friendWarnOnLevelGainState{PacketId: FriendWarnOnLevelGainStateID}
	return friendWarnOnLevelGainStateMap[instance]
}

func (fr *friendWarnOnLevelGainState) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, fr.enable)
}

func (fr *friendWarnOnLevelGainState) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &fr.enable)
}

func (fr *friendWarnOnLevelGainState) GetPacketId() uint32 {
	return fr.PacketId
}

func (fr *friendWarnOnLevelGainState) String() string {
	return fmt.Sprintf("packetId: %d\n", fr.PacketId)
}
