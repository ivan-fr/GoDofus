// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 21:59:02.8816728 +0200 CEST m=+83.613470201

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type spellForPreset struct {
	PacketId  uint32
	spellId   int32
	shortcuts []uint16
}

var spellForPresetMap = make(map[uint]*spellForPreset)

func GetSpellForPresetNOA(instance uint) *spellForPreset {
	spellForPreset_, ok := spellForPresetMap[instance]

	if ok {
		return spellForPreset_
	}

	spellForPresetMap[instance] = &spellForPreset{PacketId: SpellForPresetID}
	return spellForPresetMap[instance]
}

func (sp *spellForPreset) Serialize(buff *bytes.Buffer) {
	utils.WriteVarInt16(buff, sp.spellId)
	_ = binary.Write(buff, binary.BigEndian, uint16(len(sp.shortcuts)))
	_ = binary.Write(buff, binary.BigEndian, sp.shortcuts)
}

func (sp *spellForPreset) Deserialize(reader *bytes.Reader) {
	sp.spellId = utils.ReadVarInt16(reader)
	var len1_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len1_)
	sp.shortcuts = make([]uint16, len1_)
	_ = binary.Read(reader, binary.BigEndian, sp.shortcuts)
}

func (sp *spellForPreset) GetPacketId() uint32 {
	return sp.PacketId
}

func (sp *spellForPreset) String() string {
	return fmt.Sprintf("packetId: %d\n", sp.PacketId)
}
