// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-25 10:18:45.7099917 +0200 CEST m=+0.003729801

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type selectedServerDataExtended struct {
	PacketId uint32
	SSD      *selectedServerData
	GSI      []*gameServerInformations
}

var selectedServerDataExtended_ = &selectedServerDataExtended{PacketId: SelectedServerDataExtendedID}

func GetSelectedServerDataExtendedNOA() *selectedServerDataExtended {
	return selectedServerDataExtended_
}

func (s *selectedServerDataExtended) Serialize(buff *bytes.Buffer) {
	s.SSD.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, uint16(len(s.GSI)))
	for i := 0; i < len(s.GSI); i++ {
		s.GSI[i].Serialize(buff)
	}
}

func (s *selectedServerDataExtended) Deserialize(reader *bytes.Reader) {
	s.SSD = new(selectedServerData)
	s.SSD.Deserialize(reader)

	var serverLen uint16
	_ = binary.Read(reader, binary.BigEndian, &serverLen)
	for i := uint16(0); i < serverLen; i++ {
		var gSI = new(gameServerInformations)
		gSI.Deserialize(reader)
		s.GSI = append(s.GSI, gSI)
	}
}

func (s *selectedServerDataExtended) GetPacketId() uint32 {
	return s.PacketId
}

func (s *selectedServerDataExtended) String() string {
	return fmt.Sprintf("PacketId: %d\nSelectedServerData: %v\ngameServerInformations: %v\n", s.PacketId, s.SSD, s.GSI)
}
