// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 10:03:29.6158262 +0200 CEST m=+0.020964501

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type mountXpRatio struct {
	PacketId uint32
	ratio    byte
}

var mountXpRatioMap = make(map[uint]*mountXpRatio)

func (m *mountXpRatio) GetNOA(instance uint) Message {
	mountXpRatio_, ok := mountXpRatioMap[instance]

	if ok {
		return mountXpRatio_
	}

	mountXpRatioMap[instance] = &mountXpRatio{PacketId: MountXpRatioID}
	return mountXpRatioMap[instance]
}

func (m *mountXpRatio) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, m.ratio)
}

func (m *mountXpRatio) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &m.ratio)
}

func (m *mountXpRatio) GetPacketId() uint32 {
	return m.PacketId
}

func (m *mountXpRatio) String() string {
	return fmt.Sprintf("packetId: %d\n", m.PacketId)
}
