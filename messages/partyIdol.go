// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 15:00:35.8532723 +0200 CEST m=+31.818339101

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type partyIdol struct {
	PacketId  uint32
	idol      *idol
	ownersIds []float64
}

var partyIdolMap = make(map[uint]*partyIdol)

func GetPartyIdolNOA(instance uint) *partyIdol {
	partyIdol_, ok := partyIdolMap[instance]

	if ok {
		return partyIdol_
	}

	partyIdolMap[instance] = &partyIdol{PacketId: PartyIdolID}
	return partyIdolMap[instance]
}

func (pa *partyIdol) Serialize(buff *bytes.Buffer) {
	pa.idol.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, uint16(len(pa.ownersIds)))
	for i := 0; i < len(pa.ownersIds); i++ {
		utils.WriteVarInt64(buff, pa.ownersIds[i])
	}
}

func (pa *partyIdol) Deserialize(reader *bytes.Reader) {
	pa.idol = new(idol)
	pa.idol.Deserialize(reader)
	var len1_ uint16
	_ = binary.Read(reader, binary.BigEndian, &len1_)
	pa.ownersIds = nil
	for i := 0; i < int(len1_); i++ {
		pa.ownersIds = append(pa.ownersIds, float64(utils.ReadVarInt64(reader)))
	}
}

func (pa *partyIdol) GetPacketId() uint32 {
	return pa.PacketId
}

func (pa *partyIdol) String() string {
	return fmt.Sprintf("packetId: %d\n", pa.PacketId)
}
