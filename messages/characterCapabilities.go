// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-30 14:50:53.0862566 +0200 CEST m=+19.294131401

package messages

import (
	"GoDofus/utils"
	"bytes"
	"fmt"
)

type characterCapabilities struct {
	PacketId                    uint32
	guildEmblemSymbolCategories int32
}

var characterCapabilitiesMap = make(map[uint]*characterCapabilities)

func (ch *characterCapabilities) GetNOA(instance uint) Message {
	characterCapabilities_, ok := characterCapabilitiesMap[instance]

	if ok {
		return characterCapabilities_
	}

	characterCapabilitiesMap[instance] = &characterCapabilities{PacketId: CharacterCapabilitiesID}
	return characterCapabilitiesMap[instance]
}

func (ch *characterCapabilities) Serialize(buff *bytes.Buffer) {
	utils.WriteVarInt16(buff, ch.guildEmblemSymbolCategories)
}

func (ch *characterCapabilities) Deserialize(reader *bytes.Reader) {
	ch.guildEmblemSymbolCategories = utils.ReadVarInt16(reader)
}

func (ch *characterCapabilities) GetPacketId() uint32 {
	return ch.PacketId
}

func (ch *characterCapabilities) String() string {
	return fmt.Sprintf("packetId: %d\n", ch.PacketId)
}
