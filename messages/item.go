// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-28 17:50:43.0200753 +0200 CEST m=+0.019985601

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
)

type item struct {
	PacketId uint32
	content  []byte
	typeId   uint16
}

var itemMap = make(map[uint]*item)
var protocolType = getProtocolType()

func getProtocolType() map[uint16]Message {
	var _typesTypes = make(map[uint16]Message)
	_typesTypes[ServerSessionConstantID] = &serverSessionConstant{}
	_typesTypes[ServerSessionConstantStringID] = &serverSessionConstantString{}
	_typesTypes[ServerSessionConstantIntegerID] = &serverSessionConstantInteger{}
	_typesTypes[ServerSessionConstantLongID] = &serverSessionConstantLong{}
	_typesTypes[CharacterBaseInformationsID] = &characterBaseInformations{}

	return _typesTypes
}

func GetItemNOA(instance uint) *item {
	item_, ok := itemMap[instance]

	if ok {
		return item_
	}

	itemMap[instance] = &item{PacketId: ItemID}
	return itemMap[instance]
}

func (i *item) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, i.typeId)
	protocolType[i.typeId].Serialize(buff)
}

func (i *item) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &i.typeId)
	protocolType[i.typeId].Deserialize(reader)
}

func (i *item) GetPacketId() uint32 {
	return i.PacketId
}

func (i *item) String() string {
	return fmt.Sprintf("packetId: %d\n", i.PacketId)
}
