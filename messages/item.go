// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-28 17:50:43.0200753 +0200 CEST m=+0.019985601

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type item struct {
	PacketId uint32
	id       int32
	typeId   uint16
}

var itemMap = make(map[uint]*item)

func GetItemNOA(instance uint) *item {
	item_, ok := itemMap[instance]

	if ok {
		return item_
	}

	itemMap[instance] = &item{PacketId: ItemID}
	return itemMap[instance]
}

func (i *item) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, i.typeId)
	utils.WriteVarShort(buff, i.id)
}

func (i *item) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &i.typeId)
	i.id = utils.ReadVarInt16(reader)
}

func (i *item) GetPacketId() uint32 {
	return i.PacketId
}

func (i *item) String() string {
	return fmt.Sprintf("packetId: %d\n", i.PacketId)
}
