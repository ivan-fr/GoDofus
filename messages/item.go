// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-28 17:50:43.0200753 +0200 CEST m=+0.019985601

package messages

import (
	"bytes"
	"encoding/binary"
	"fmt"
	"reflect"
)

type item struct {
	PacketId uint32
	content  []byte
	typeId   uint16
	myProcol Message
}

var protocolType = getProtocolType()

func getProtocolType() map[uint16]reflect.Type {

	var _typesTypes = make(map[uint16]reflect.Type)
	_typesTypes[ServerSessionConstantID] = reflect.TypeOf(serverSessionConstant{})
	_typesTypes[ServerSessionConstantStringID] = reflect.TypeOf(serverSessionConstantString{})
	_typesTypes[ServerSessionConstantIntegerID] = reflect.TypeOf(serverSessionConstantInteger{})
	_typesTypes[ServerSessionConstantLongID] = reflect.TypeOf(serverSessionConstantLong{})
	_typesTypes[CharacterBaseInformationsID] = reflect.TypeOf(characterBaseInformations{})
	_typesTypes[ShortcutID] = reflect.TypeOf(shortcut{})
	_typesTypes[ShortcutObjectID] = reflect.TypeOf(shortcutObject{})
	_typesTypes[ShortcutObjectPresetID] = reflect.TypeOf(shortcutObjectPreset{})
	_typesTypes[ShortcutObjectIdolsPresetID] = reflect.TypeOf(shortcutObjectIdolsPreset{})
	_typesTypes[ShortcutObjectItemID] = reflect.TypeOf(shortcutObjectItem{})
	_typesTypes[ShortcutSpellID] = reflect.TypeOf(shortcutSpell{})
	_typesTypes[ShortcutSmileyID] = reflect.TypeOf(shortcutSmiley{})
	_typesTypes[ShortcutEmoteID] = reflect.TypeOf(shortcutEmote{})
	_typesTypes[ShortcutEntitiesPresetID] = reflect.TypeOf(shortcutEntitiesPreset{})
	_typesTypes[ObjectEffectID] = reflect.TypeOf(objectEffect{})
	_typesTypes[ObjectEffectIntegerID] = reflect.TypeOf(objectEffectInteger{})
	_typesTypes[ObjectEffectCreatureID] = reflect.TypeOf(objectEffectCreature{})
	_typesTypes[ObjectEffectLadderID] = reflect.TypeOf(objectEffectLadder{})
	_typesTypes[ObjectEffectMinMaxID] = reflect.TypeOf(objectEffectMinMax{})
	_typesTypes[ObjectEffectDurationID] = reflect.TypeOf(objectEffectDuration{})
	_typesTypes[ObjectEffectStringID] = reflect.TypeOf(objectEffectString{})
	_typesTypes[ObjectEffectDiceID] = reflect.TypeOf(objectEffectDice{})
	_typesTypes[ObjectEffectDateID] = reflect.TypeOf(objectEffectDate{})
	_typesTypes[ObjectEffectMountID] = reflect.TypeOf(objectEffectMount{})
	_typesTypes[PresetID] = reflect.TypeOf(preset{})
	_typesTypes[PresetsContainerPresetID] = reflect.TypeOf(presetsContainerPreset{})
	_typesTypes[IconNamedPresetID] = reflect.TypeOf(iconNamedPreset{})
	_typesTypes[SpellsPresetID] = reflect.TypeOf(spellsPreset{})
	_typesTypes[ForgettableSpellsPresetID] = reflect.TypeOf(forgettableSpellsPreset{})
	_typesTypes[StatsPresetID] = reflect.TypeOf(statsPreset{})
	_typesTypes[IdolsPresetID] = reflect.TypeOf(idolsPreset{})
	_typesTypes[EntitiesPresetID] = reflect.TypeOf(entitiesPreset{})
	_typesTypes[FullStatsPresetID] = reflect.TypeOf(fullStatsPreset{})
	_typesTypes[ItemsPresetID] = reflect.TypeOf(itemsPreset{})
	_typesTypes[InteractiveElementSkillID] = reflect.TypeOf(interactiveElementSkill{})
	_typesTypes[InteractiveElementNamedSkillID] = reflect.TypeOf(interactiveElementNamedSkill{})
	_typesTypes[SkillActionDescriptionID] = reflect.TypeOf(skillActionDescription{})
	_typesTypes[SkillActionDescriptionTimedID] = reflect.TypeOf(skillActionDescriptionTimed{})
	_typesTypes[SkillActionDescriptionCollectID] = reflect.TypeOf(skillActionDescriptionCollect{})
	_typesTypes[SkillActionDescriptionCraftID] = reflect.TypeOf(skillActionDescriptionCraft{})

	return _typesTypes
}

func (i *item) Serialize(buff *bytes.Buffer) {
	_ = binary.Write(buff, binary.BigEndian, i.typeId)
	newProtocol := reflect.New(protocolType[i.typeId]).Interface().(Message)
	newProtocol.Serialize(buff)
	i.myProcol = newProtocol
}

func (i *item) Deserialize(reader *bytes.Reader) {
	_ = binary.Read(reader, binary.BigEndian, &i.typeId)
	i.myProcol.Deserialize(reader)
}

func (i *item) GetPacketId() uint32 {
	return i.PacketId
}

func (i *item) String() string {
	return fmt.Sprintf("packetId: %d\n", i.PacketId)
}
