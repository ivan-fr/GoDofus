// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// 2021-08-29 21:53:48.8498935 +0200 CEST m=+61.186565601

package messages

import (
	"GoDofus/utils"
	"bytes"
	"encoding/binary"
	"fmt"
)

type iconNamedPreset struct {
	PacketId               uint32
	presetsContainerPreset *presetsContainerPreset
	iconId                 uint16
	name                   []byte
}

var iconNamedPresetMap = make(map[uint]*iconNamedPreset)

func GetIconNamedPresetNOA(instance uint) *iconNamedPreset {
	iconNamedPreset_, ok := iconNamedPresetMap[instance]

	if ok {
		return iconNamedPreset_
	}

	iconNamedPresetMap[instance] = &iconNamedPreset{PacketId: IconNamedPresetID}
	return iconNamedPresetMap[instance]
}

func (ic *iconNamedPreset) Serialize(buff *bytes.Buffer) {
	ic.presetsContainerPreset.Serialize(buff)
	_ = binary.Write(buff, binary.BigEndian, ic.iconId)
	utils.WriteUTF(buff, ic.name)
}

func (ic *iconNamedPreset) Deserialize(reader *bytes.Reader) {
	ic.presetsContainerPreset = new(presetsContainerPreset)
	ic.presetsContainerPreset.Deserialize(reader)
	_ = binary.Read(reader, binary.BigEndian, &ic.iconId)
	ic.name = utils.ReadUTF(reader)
}

func (ic *iconNamedPreset) GetPacketId() uint32 {
	return ic.PacketId
}

func (ic *iconNamedPreset) String() string {
	return fmt.Sprintf("packetId: %d\n", ic.PacketId)
}
