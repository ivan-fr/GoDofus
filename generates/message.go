package generates

import (
	"fmt"
	"os"
	"strings"
	"text/template"
	"time"
)

var packageTemplate = template.Must(template.New("").Parse(`// Code generated by go GenerateMessage; DO NOT EDIT.
// This file was generated by robots at
// {{ .Timestamp }}

package messages

import (
	"bytes"
	"fmt"
)

type {{ .Name }} struct {
	PacketId uint32
}

var {{ .Name }}_ = &{{ .Name }}{PacketId: {{ .Id }}}

func Get{{ .NameCapFirst }}NOA() *{{ .Name }} {
	return {{ .Name }}_
}

func ({{.FistLetter}} *{{.Name}}) Serialize(buff *bytes.Buffer) {

}

func ({{.FistLetter}} *{{.Name}}) Deserialize(reader *bytes.Reader) {

}

func ({{.FistLetter}} *{{.Name}}) GetPacketId() uint32 {
	return {{ .FistLetter }}.PacketId
}

func ({{.FistLetter}} *{{.Name}}) String(reader *bytes.Reader) string {
	return fmt.Sprintf("packetId: %d\n", {{ .FistLetter }}.packetId)
}
`))

func GenerateMessage(Name string, packetId uint32) {
	f, err := os.Create(fmt.Sprintf("./messages/%s.go", Name))

	if err != nil {
		panic(err)
	}

	defer func(f *os.File) {
		err := f.Close()
		if err != nil {
			panic(err)
		}
	}(f)

	err = packageTemplate.Execute(f, struct {
		Timestamp    time.Time
		NameCapFirst string
		Name         string
		Id           uint32
		FistLetter   string
	}{
		Timestamp:    time.Now(),
		Name:         Name,
		NameCapFirst: strings.Title(Name),
		Id:           packetId,
		FistLetter:   string((Name)[0]),
	})
	if err != nil {
		panic(err)
	}
}
